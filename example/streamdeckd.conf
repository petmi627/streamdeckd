eventloop {
     policy uvloop:EventLoopPolicy;
}

logger {
    format "%(levelname)s - %(message)s";
    level INFO;
}

# Loads an extension.
# A extension is a module placed in streamdeckd.ext 
#
# The module must have the functions
# - load(app: streamdeckd.application.Streamdeckd, ctx: streamdeckd.config.applicaiton.ApplicationContext) -> None
#   Add new configuration options.
#   To add new root configuration options, monkey-patch this class by adding a new method to the instance.
#
# - start(app: streamdeckd.application.Streamdeckd) -> Awaitable[None]
#   This coroutine is called when the streamdeck starts.
#
# - stop(app: streamdeckd.application.Streamdeckd) -> Awaitable[None]
#   This coroutine is run when streamdeck stops.
load http;
load pulseaudio;

# Scan for new devices every ten seconds.
rescan 10s;


load strings;
# The line "load strings;" has enabled this command.
split_variable ip "{raw_ip}" ".";

# The streamdeck directive can 
streamdeck '*' default {
    fps 3;
    brightness 1;

    font "FreeMono.ttf";
    size 12;

    connected {
        emit "get:ip";
    }

    signal every 30m {
        log "Updating IP-Adress";
        emit "get:ip:silent";
    }

    signal every 250ms {
        parallel {
            silent http get "http://192.168.1.54:8000/Strip[0].mute/" {
                header "User-Agent" "Streamdeckd/0.1.0";
                variable "surface_muted";
                parser "json";
            }
            silent http get "http://192.168.1.54:8000/Bus[4].mute/" {
                header "User-Agent" "Streamdeckd/0.1.0";
                variable "surface_audio";
                parser "json";
            }
            silent http get "http://192.168.1.54:8000/Strip[1].mute/" {
                header "User-Agent" "Streamdeckd/0.1.0";
                parser "json";
                variable "surface_microphone";
            }
        }
    }

    signal custom "get:ip:silent" {
        http get "https://api.ipify.org/?format=txt" {
            header "User-Agent" "Streamdeckd/0.1.0";
            variable "received_ip";
            parser "text";
        }
        set "raw_ip" "{received_ip}";
    }

    signal custom "get:ip" {
        set "raw_ip" "?.?.?.?";
        emit "get:ip:start";
        emit "get:ip:silent";
        emit "get:ip:stop";
    }

    menu "Info" default {
        include "menu.conf";

        opened {
            button 0 0 {
                bg "#444";
            }
        }

        button 4 1 {
            size 22;
            text "{ip:3}";

            state 'Default' default {
                signal custom "get:ip:start" {
                    bg "#400";
                }

                signal custom "get:ip:stop" {
                    bg "#000";
                }
            }
        }

        button 3 1 {
            size 22;
            text "{ip:2}";

            state 'Default' default {
                signal custom "get:ip:start" {
                    bg "#400";
                }

                signal custom "get:ip:stop" {
                    bg "#000";
                }
            }
        }

        button 2 1 {
            size 22;
            text "{ip:1}";

            state 'Default' default {
                signal custom "get:ip:start" {
                    bg "#400";
                }

                signal custom "get:ip:stop" {
                    bg "#000";
                }
            }
        }

        button 1 1 {
            size 22;
            text "{ip:0}";

            state 'Default' default {
                signal custom "get:ip:start" {
                    bg "#400";
                }

                signal custom "get:ip:stop" {
                    bg "#000";
                }
            }
        }
        button 0 1 {
            size 22;
            text "IP";

            state 'Default' default {
                released {
                    emit "get:ip";
                }

                signal custom "get:ip:start" {
                    bg "#400";
                }

                signal custom "get:ip:stop" {
                    bg "#000";
                }
            }
        }

        button 1 2 {
            font "FreeMono.ttf";
            size 20;
            image "";

            state "Time" default {
                text "{now:%H}";
            }

            state "Date" {
                text "{now:%d}";
            }
        }
        button 2 2 {
            font "FreeMono.ttf";
            size 20;
            image "";

            state "Time" default {
                text "{now:%M}";
            }

            state "Date" {
                text "{now:%m}";
            }
        }
        button 3 2 {
            font "FreeMono.ttf";
            size 20;
            image "";

            state "Time" default {
                text "{now:%S}";
            }

            state "Date" {
                text "{now:%y}";
            }
        }
        button 0 2 {
            size 22;

            state "Off" default {
                text "Time";
                bg "#000";
                entered {
                    parallel {
                        button 1 2 {
                            state "Time";
                        }
                        button 2 2 {
                            state "Time";
                        }
                        button 3 2 {
                            state "Time";
                        }
                    }
                }

                released {
                    state "On";
                }
            }

            state "On" default {
                text "Date";
                bg "#040";
                entered {
                    log "Executed";

                    parallel {
                        button 1 2 {
                            state "Date";
                        }
                        button 2 2 {
                            state "Date";
                        }
                        button 3 2 {
                            state "Date";
                        }
                    }
                }

                released {
                    state "Off";
                }
            }
        }
    }

    menu "Config" {
        include "menu.conf";

        opened {
            button 4 0 {
                bg "#444";
            }
        }

        button 0 1 {
            image "example/keys/elgato_brightness.png";
            text "{state}%";

            state "100" default {
                entered {
                    brightness 1;
                }

                released {
                    state "75";
                }
            }

            state "75" {
                entered {
                    brightness 0.75;
                }

                released {
                    state "50";
                }
            }

            state "50" {
                entered {
                    brightness 0.5;
                }

                released {
                    state "25";
                }
            }

            state "25" {
                entered {
                    brightness 0.25;
                }

                released {
                    state "0";
                }
            }

            state "0" {
                entered {
                    brightness 0;
                }

                released {
                    state "100";
                }
            }
        }
    }

    menu "Kill" {
        include "menu.conf";

        opened {
            button 3 0 {
                bg "#444";
            }
        }

        button 0 1 {
            image "example/keys/elgato_exit.png";

            state "Off" default {
                text "Exit";

                released {
                    state "Armed";
                }

            }

            state "Armed" default {
                text "Sure?";
                bg "#400";

                entered {
                    delay 10s;
                    state "Off";
                }

                released {
                    exit;
                }
            }
        }

        button 1 1 {
            image "example/keys/elgato_exit.png";

            state "Off" default {
                text "Shutdown";

                released {
                    state "Armed";
                }
            }

            state "Armed" {
                text "Sure?";
                bg "#400";

                entered {
                    delay 2s;
                    state "Off";
                }

                released {
                    run 'dbus-send --system --print-reply --dest=org.freedesktop.login1 /org/freedesktop/login1 "org.freedesktop.login1.Manager.PowerOff" boolean:true';
                }
            }
        }

    }

    menu "Audio" {
        include "menu.conf";

        opened {
            button 1 0 {
                bg "#444";
            }
        }

        button 0 1 {
            text "PC";
            size 24;
        }

        button 1 1 {
            text "Mic\nMute";
            size 18;

            state "Main" default {
                signal changed "{pulse:alsa_input.usb-RODE_Microphones_RODE_NT-USB-00.analog-stereo:muted}" {
                    if "{pulse:alsa_input.usb-RODE_Microphones_RODE_NT-USB-00.analog-stereo:muted}" == "0" {
                        bg "#000";
                    }
                    if "{pulse:alsa_input.usb-RODE_Microphones_RODE_NT-USB-00.analog-stereo:muted}" == "1" {
                        bg "#400";
                    }
                }

                released {
                    pa_mute "alsa_input.usb-RODE_Microphones_RODE_NT-USB-00.analog-stereo" toggle;
                }
            }
        }

        button 2 1 {
            text "Audio\nMute";
            size 18;

            state "Main" default {
                signal changed "{pulse:alsa_output.usb-SABAJ_SABAJ_D4_v1.2-00.analog-stereo:muted}" {
                    if "{pulse:alsa_output.usb-SABAJ_SABAJ_D4_v1.2-00.analog-stereo:muted}" == "0" {
                        bg "#000";
                    }
                    if "{pulse:alsa_output.usb-SABAJ_SABAJ_D4_v1.2-00.analog-stereo:muted}" == "1" {
                        bg "#400";
                    }
                }

                released {
                    pa_mute "alsa_output.usb-SABAJ_SABAJ_D4_v1.2-00.analog-stereo" toggle;
                }
            }
        }

        button 0 2 {
            text "Note";
            size 18;
        }

        button 1 2 {
            text "Mic\nMute";
            size 18;

            state "Main" default {
                signal changed "{surface_muted}" {
                    if "{surface_muted}" == "1.0" {
                        bg "#400";
                    }
                    if "{surface_muted}" == "0.0" {
                        bg "#000";
                    }
                }

                released {
                    if "{surface_muted}" == "0.0" {
                        silent http post "http://192.168.1.54:8000/Strip[0].Mute" {
                            body '{{"value": 1}}';
                        }
                    }
                    if "{surface_muted}" == "1.0" {
                        silent http post "http://192.168.1.54:8000/Strip[0].Mute" {
                            body '{{"value": 0}}';
                        }
                    }
                }
            }
        }

        button 2 2 {
            text "Audio\nMute";
            size 18;

            state "Main" default {
                signal changed "{surface_audio}" {
                    if "{surface_audio}" == "1.0" {
                        bg "#400";
                    }
                    if "{surface_audio}" == "0.0" {
                        bg "#000";
                    }
                }

                released {
                    if "{surface_audio}" == "0.0" {
                        silent http post "http://192.168.1.54:8000/Bus[4].Mute" {
                            body '{{"value": 1}}';
                        }
                    }
                    if "{surface_audio}" == "1.0" {
                        silent http post "http://192.168.1.54:8000/Bus[4].Mute" {
                            body '{{"value": 0}}';
                        }
                    }
                }
            }
        }

        button 4 2 {
            text "Local\nMicro";
            size 18;

            state "Main" default {
                signal changed "{surface_microphone}" {
                    if "{surface_microphone}" == "0.0" {
                        bg "#040";
                    }
                    if "{surface_microphone}" == "1.0" {
                        bg "#000";
                    }
                }

                released {
                    if "{surface_microphone}" == "0.0" {
                        parallel {
                            silent http post "http://192.168.1.54:8000/Strip[0].Mute" {
                                body '{{"value": 0}}';
                            }
                            silent http post "http://192.168.1.54:8000/Strip[1].Mute" {
                                body '{{"value": 1}}';
                            }
                        }
                    }
                    if "{surface_microphone}" == "1.0" {
                        parallel {
                            silent http post "http://192.168.1.54:8000/Strip[0].Mute" {
                                body '{{"value": 1}}';
                            }
                            silent http post "http://192.168.1.54:8000/Strip[1].Mute" {
                                body '{{"value": 0}}';
                            }
                        }
                    }
                }
            }
        }
    }
}